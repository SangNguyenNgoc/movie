server:
  port: 8080
  forward-headers-strategy: native
spring:
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: ${MYSQL_URL}
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.MySQL8Dialect
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    sentinel:
      username: ${REDIS_USERNAME}
      password: ${REDIS_PASSWORD}
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
#  kafka:
#    bootstrap-servers:
#      - ${KAFKA_SERVER}
#    properties:
#      security.protocol: SASL_SSL
#      sasl.mechanism: PLAIN
#      sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${KAFKA_USER}" password="${KAFKA_PASS}";
#    ssl:
#      trust-store-location: ${KAFKA_TRUSTSTORE_LOCATION}
#      trust-store-password: ${KAFKA_TRUSTSTORE_PASS}
#    producer:
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#      acks: -1
#      retries: 3
#      properties:
#        enable.idempotence: true
#        request.timeout.ms: 30000
#        max.in.flight.requests.per.connection: 5
#    consumer:
#      group-id: trip-consumer-group
#      auto-offset-reset: earliest
#      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer


logging:
  level:
    org.springframework.cache: trace
    org.springframework.transaction: debug
    org.ehcache: trace
    org.hibernate.SQL: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace
    org.hibernate.Transaction: debug


client:
  client-id: web-client
  redirect-uris:
    - ${url.base-url}/authorized
    - ${SSL}://${FE_DOMAIN}/authorized
    - ${SSL}://oauth.pstmn.io/v1/callback
    - ${url.base-url}
    - ${url.base-url}/swagger-ui/oauth2-redirect.html
  settings:
    require-authorization-consent: false
    require-proof-key: true

springdoc:
  swagger-ui:
    oauth:
      client-id: ${client.client-id}
      use-pkce-with-authorization-code-grant: true
    oauth2-redirect-url: ${SSL}://${DOMAIN}/swagger-ui/oauth2-redirect.html

token:
  key-size: 2048
  access-token-time-to-live: 1

url:
  host: ${DOMAIN}
  base-url: ${SSL}://${DOMAIN}
  login-page-url: /auth/login
  login-url: /login
  verify-url: /auth/verify
  reset-pass-url: /auth/reset-password
  register-page-url: ${FE_DOMAIN}/register
  change-email-url: /auth/email
  home-page-url: ${SSL}://${FE_DOMAIN}
  avatar: https://cdn.discordapp.com/attachments/1168144426141499412/1169264779769155594/c6e56503cfdd87da299f72dc416023d4.jpg?ex=66a2512f&is=66a0ffaf&hm=a7dfbd6f1d504be1302857abc0dcb2abc9f8f03741eb92319d5c2dcc2d1f7184&

vn_pay:
  vn_pay_url: https://sandbox.vnpayment.vn/paymentv2/vpcpay.html
  vn_pay_return_url: ${url.base-url}/api/v1/bills/payment
  tmn_code: ${TMN_CODE}
  key: ${VNPAY_KEY}
  time_out: 10
  bill_detail: http://localhost:3000/bill/

s3client:
  endpoint_url: ${ENDPOINT}
  access_key: ${ACCESS_KEY}
  secret_key: ${SECRET_KEY}
  bucket_name: ${BUCKET_NAME}
  region: ${REGION}

show:
  showing-before-day: 7

schedule_shows:
  start_in_day: "09:00"
  end_in_day: "23:59"
  cleaning_time: 15 #minus
  interval_time: 15 #minus

timeout:
  verify: 5
  change_email: 5
  change_pass: 5
  reset_pass: 10